name: Build Code

on:
  push:
    branches:
      - '*'
    tags:
      - '*'
    schedule:
      - cron: '40 3 * * *' # Every day at 3:40
    pull_request:
    workflow_dispatch:

jobs:
  check:
    name: Check
    strategy:
      matrix:
        platform: [
          ubuntu-latest,
          macos-latest,
          windows-latest,
        ]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: rust-src

      - name: Setup cargo caching
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-check-${{ hashFiles('**/Cargo.lock') }}

      - name: Run `cargo check`
        uses: actions-rs/cargo@v1
        with:
          command: check

  test:
    name: Test
    strategy:
      matrix:
        platform: [
          ubuntu-latest,
          macos-latest,
          windows-latest,
        ]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: rust-src, llvm-tools-preview

      - name: Setup cargo caching
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-test-${{ hashFiles('**/Cargo.lock') }}

      - name: Install `cargo bootimage`
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: bootimage
      - name: Run `cargo bootimage`
        uses: actions-rs/cargo@v1
        with:
          command: bootimage

      # Install QEMU:
      - name: Install QEMU (Linux)
        if: runner.os == 'Linux'
        run: sudo apt update && sudo apt install qemu-system-x86
      - name: Install QEMU (MacOS)
        if: runner.os == 'macOS'
        run: brew install qemu
        env:
          HOMEBREW_NO_AUTO_UPDATE: 1
          HOMEBREW_NO_BOTTLE_SOURCE_FALLBACK: 1
          HOMEBREW_NO_INSTALL_CLEANUP: 1
      - name: Install Scoop (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          Invoke-Expression (New-Object System.Net.WebClient).DownloadString('https://get.scoop.sh')
          echo $HOME\scoop\shims | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8
      - name: Install QEMU (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: scoop install qemu
      - name: Print QEMU Version
        run: qemu-system-x86_64 --version

      - name: Run `cargo test`
        uses: actions-rs/cargo@v1
        with:
          command: test

  check_formatting:
    name: Check Formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: rustfmt

      - name: Run `cargo fmt`
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchian: nightly
          components: clippy, rust-src

      - name: Run `cargo clippy`
        uses: actions-rs/cargo@v1
        with:
          command: clippy
